@model RestaurantManager.Models.Reservation

@{
    ViewBag.Title = "Book a Table";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<div class="reservation-background">
    <div class="reservation-overlay">
        <div class="reservation-form-card container py-5">
            <h2 class="text-center mb-4">Book Table</h2>

            <form id="reservationForm" method="post" action="@Url.Action("BookAndConfirm", "Reservation")">
                @Html.AntiForgeryToken()

                <div class="form-group mb-3">
                    <label for="ReservationDateTime">Reservation Date & Time</label>
                    <input id="ReservationDateTime" name="ReservationDateTime" class="form-control" value="@DateTime.Now.AddHours(1).ToString("yyyy-MM-ddTHH:mm")" required />
                    <div id="datetimeError" class="text-danger mt-1" style="display: none; font-size: 0.875rem;"></div>                    
                </div>

                <div class="form-group mb-3">
                    <label for="GuestCount">Number of Guests</label>
                    <input type="number" id="GuestCount" name="GuestCount" class="form-control" min="1" max="50" value="1" required />
                </div>

                <div class="form-group mb-3">
                    <label for="Notes">Additional Reservation Requests</label>
                    <textarea id="Notes" name="Notes" class="form-control" rows="3" placeholder="Special occasions, accessibility needs, dietary restrictions, etc."></textarea>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Contact Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="FirstName">First Name</label>
                                    <input type="text" id="FirstName" name="FirstName" class="form-control" value="@ViewBag.FirstName" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="LastName">Last Name</label>
                                    <input type="text" id="LastName" name="LastName" class="form-control" value="@ViewBag.LastName" required />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="Email">Email</label>
                                    <input type="email" id="Email" name="Email" class="form-control" value="@ViewBag.Email" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="Phone">Phone Number</label>
                                    <input type="tel" id="Phone" name="Phone" class="form-control" value="@ViewBag.Phone" required />
                                </div>
                            </div>
                        </div>
                        <small class="text-muted">
                            <i class="fas fa-info-circle"></i>
                            Contact information is taken from your profile. You can edit these details <a href="/CustomerDashboard" class="text-primary">here</a> if needed.
                        </small>
                    </div>
                </div>
            </form>
            <div class="text-center mt-4">
                <button type="submit" form="reservationForm" class="btn btn-primary btn-lg w-100 py-3">
                    <i class="fas fa-calendar-check"></i> Book Now
                </button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('reservationForm');
    const errorDiv = document.getElementById('datetimeError');
    
    //Restaurant hours for each day of the week
    //Sunday 10am-9pm
    //Monday closed
    //Tuesday 11am-10pm
    //Wednesday 11am-10pm
    //Thursday 11am-10pm
    //Friday 11am-11pm
    //Saturday 11am-11pm  
    const hours = [
        [10, 21], 
        null,     
        [11, 22], 
        [11, 22], 
        [11, 22],   
        [11, 23], 
        [11, 23]  
    ];
    
    //Hide error message and reset border color
    function hideError() {
        errorDiv.style.display = 'none';
        document.getElementById('ReservationDateTime').style.borderColor = '';
    }
    
    //Start Flatpickr
    //Year - month - day - 12hour clock - all intervals - disable past dates - start hour from now.
    const fp = flatpickr("#ReservationDateTime", {

        enableTime: true,                   
        dateFormat: "Y-m-d h:i K",          
        time_24hr: false,                    
        minuteIncrement: 1,                 
        minDate: "today",                   
        defaultDate: new Date(Date.now() + 60*60*1000), 
        
        //Take out Mondays
        disable: [
            function(date) {
                return date.getDay() === 1; //Disable Mondays (day 1)
            }
        ],
        
        //This runs when user picks a date
        onChange: function(selectedDates, dateStr, instance) {
            if (selectedDates.length > 0) {
                const day = selectedDates[0].getDay(); 
                const dayHours = hours[day];         
                
                if (dayHours) {
                    
                    const startHour = dayHours[0]; 
                    const endHour = dayHours[1];   
                    
                    //Convert to 12 hour format
                    const startTime12 = startHour <= 12 ? `${startHour}:00 AM` : `${startHour - 12}:00 PM`;
                    const endTime12 = endHour <= 12 ? `${endHour - 1}:30 AM` : `${endHour - 12 - 1}:30 PM`;
                    
                    instance.set('minTime', startTime12);
                    instance.set('maxTime', endTime12);
                    hideError(); 
                } else {
                    
                    instance.clear();
                }
            }
        },
        
        minTime: "10:00 AM",  
        maxTime: "8:30 PM"    
    });
    
    //Check form when user tries to submit if no date/time is selected. 
    form.addEventListener('submit', function(e) {
        const input = document.getElementById('ReservationDateTime');
        if (!input.value) {         
            e.preventDefault();      
            return false;
        }
    });
});
</script>

<style>
    .reservation-background {
        background: url('/images/patio.png') no-repeat center center;
        background-size: cover;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    .reservation-overlay {
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 12px;
        padding: 2rem;
        max-width: 600px;
        width: 100%;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
    }

    .reservation-form-card h2 {
        font-weight: 600;
    }

    .form-control {
        border-radius: 0.5rem;
    }

    .card {
        border: none;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border-radius: 8px;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        border-radius: 8px 8px 0 0 !important;
    }

    .card-header h5 {
        color: #495057;
        font-weight: 600;
    }

    .btn-primary {
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
</style>