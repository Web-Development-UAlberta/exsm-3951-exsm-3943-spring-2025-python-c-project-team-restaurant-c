@model RestaurantManager.Models.User
@{
    bool isLogin = ViewBag.IsLogin ?? true;
    bool isInternalUserLogin = ViewBag.UserType == 1;
}

<h2 class="mb-4">@((isLogin) ? (isInternalUserLogin ? "Admin Login" : "Login") : "Register")</h2>

<form asp-controller="Account" asp-action="@(isLogin ? "Login" : "Register")" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    @if (isInternalUserLogin)
    {
        <input type="hidden" name="isInternalUserLogin" value="true" />
    }

    <div class="mb-3">
        @Html.LabelFor(model => model.Email, "Email", new { @class = "form-label" })
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Enter your email", type = "email" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.PasswordHash, "Password", new { @class = "form-label" })
        @Html.PasswordFor(model => model.PasswordHash, new { @class = "form-control", placeholder = "Enter your password", type = "password" })
        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
    </div>

    @if (!isLogin)
    {
        <div class="mb-3">
            @Html.Label("ConfirmPassword", "Confirm Password", new { @class = "form-label" })
            <input type="password" name="ConfirmPassword" class="form-control" placeholder="Confirm your password" />
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.FirstName, "First Name", new { @class = "form-label" })
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", placeholder = "Enter your first name", type = "text" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.LastName, "Last Name", new { @class = "form-label" })
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", placeholder = "Enter your last name", type = "text" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Phone, "Telephone", new { @class = "form-label" })
            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", placeholder = "Enter your phone number", type = "tel" })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    }

    <div class="d-grid mb-3">
        <button type="submit" class="btn btn-primary">@((isLogin) ? "Login" : "Register")</button>
    </div>
</form>

<div class="text-center mt-3">
    <p>
        @if (!isInternalUserLogin){
            @if (isLogin)
            {
                <span>Don't have an account? <a asp-action="Register">Create Account</a></span>
            }
            else
            {
                <span>Already have an account? <a asp-action="Login">Login</a></span>
            }
        }
    </p>
</div>